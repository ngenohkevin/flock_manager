// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: production.sql

package db

import (
	"context"
)

const createProduction = `-- name: CreateProduction :one

INSERT INTO production (
                 production_id, eggs, dirty, wrong_shape, weak_shell, damaged, hatching_eggs
) VALUES (
           $1, $2, $3, $4, $5, $6, $7
) RETURNING production_id, eggs, dirty, wrong_shape, weak_shell, damaged, hatching_eggs, created_at
`

type CreateProductionParams struct {
	ProductionID int64 `json:"production_id"`
	Eggs         int64 `json:"eggs"`
	Dirty        int64 `json:"dirty"`
	WrongShape   int64 `json:"wrong_shape"`
	WeakShell    int64 `json:"weak_shell"`
	Damaged      int64 `json:"damaged"`
	HatchingEggs int64 `json:"hatching_eggs"`
}

func (q *Queries) CreateProduction(ctx context.Context, arg CreateProductionParams) (Production, error) {
	row := q.db.QueryRowContext(ctx, createProduction,
		arg.ProductionID,
		arg.Eggs,
		arg.Dirty,
		arg.WrongShape,
		arg.WeakShell,
		arg.Damaged,
		arg.HatchingEggs,
	)
	var i Production
	err := row.Scan(
		&i.ProductionID,
		&i.Eggs,
		&i.Dirty,
		&i.WrongShape,
		&i.WeakShell,
		&i.Damaged,
		&i.HatchingEggs,
		&i.CreatedAt,
	)
	return i, err
}
